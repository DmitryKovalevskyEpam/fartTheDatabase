services:
  db:
    image: postgres:15
    container_name: user-service-db
    restart: always
    environment:
      POSTGRES_DB: userservicedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d userservicedb"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 20s

  app:
    build: .
    container_name: user-service-app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/userservicedb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: public
      SPRING_LIQUIBASE_CHANGE_LOG: classpath:db/changelog/db.changelog-master.xml
      SPRING_LIQUIBASE_DEFAULT_SCHEMA: public
      SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: 60000
      SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: 5
      LOGGING_LEVEL_COM_EXAMPLE_SERSERVICEAPP: DEBUG
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: DEBUG
      LOGGING_LEVEL_ORG_LIQUIBASE: INFO
    networks:
      - app-network
    restart: on-failure

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge